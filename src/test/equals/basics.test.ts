import { declare_test, expect_type } from "@lib"

declare_test("tells apart literal types from other types.js", check => {
    check = expect_type<1>().not.to_equal<number>()
})
declare_test("tells apart unknown from other types.js", check => {
    check = expect_type<unknown>().not.to_equal<number>()
    check = expect_type<unknown>().not.to_equal<string>()
    check = expect_type<unknown>().not.to_equal<never>()
    check = expect_type<unknown>().not.to_equal<void>()
    check = expect_type<unknown>().not.to_equal<1>()
    check = expect_type<unknown>().not.to_equal<undefined>()
})
declare_test("tells apart never from other types.js", check => {
    check = expect_type<never>().not.to_equal<number>()
    check = expect_type<never>().not.to_equal<string>()
    check = expect_type<never>().not.to_equal<unknown>()
    check = expect_type<never>().not.to_equal<void>()
    check = expect_type<never>().not.to_equal<1>()
    check = expect_type<never>().not.to_equal<undefined>()
})
declare_test("tells apart void from other types.js", check => {
    check = expect_type<void>().not.to_equal<number>()
    check = expect_type<void>().not.to_equal<string>()
    check = expect_type<void>().not.to_equal<unknown>()
    check = expect_type<void>().not.to_equal<never>()
    check = expect_type<void>().not.to_equal<1>()
    check = expect_type<void>().not.to_equal<undefined>()
})
declare_test("tells apart undefined from other types.js", check => {
    check = expect_type<undefined>().not.to_equal<number>()
    check = expect_type<undefined>().not.to_equal<string>()
    check = expect_type<undefined>().not.to_equal<unknown>()
    check = expect_type<undefined>().not.to_equal<never>()
    check = expect_type<undefined>().not.to_equal<void>()
    check = expect_type<undefined>().not.to_equal<1>()
})
declare_test("tells apart null from other types.js", check => {
    check = expect_type<null>().not.to_equal<number>()
    check = expect_type<null>().not.to_equal<string>()
    check = expect_type<null>().not.to_equal<unknown>()
    check = expect_type<null>().not.to_equal<never>()
    check = expect_type<null>().not.to_equal<void>()
    check = expect_type<null>().not.to_equal<undefined>()
    check = expect_type<null>().not.to_equal<1>()
})
